variables:
  - group: vars # azure pipelines variable group https://docs.microsoft.com/en-us/azure/devops/pipelines/library/variable-groups?view=azdevops&tabs=yaml
  - name: dockerImagesPush
    value: 'true'
  - name: azureSubscription
    value: 'GlobalDocker 9f5f154e-0b5a-440f-811e-98f8295193a4'
  - name: azureContainerRegistry
    value: '{"loginServer":"globaldockerregistry.azurecr.io", "id" : "/subscriptions/9f5f154e-0b5a-440f-811e-98f8295193a4/resourceGroups/globaldocker/providers/Microsoft.ContainerRegistry/registries/globaldockerregistry"}'
  - name: vmImage
    value: 'ubuntu-latest' # needed for linux container build/push https://stackoverflow.com/questions/57732505/run-linux-containers-in-an-azure-devops-windows-hosted-build-agent

trigger:
- master
- develop
- refs/tags/v*

resources:
- repo: self
  fetchDepth: 1

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build job
    pool:
      vmImage: $(vmImage)
    steps:
    - task: GitVersion@5 # alternative https://github.com/adamralph/minver
      displayName: Apply git version

    ### NUKE START ####################################
    - task: UseDotNet@2 # gitversion needs 3.0
      displayName: Nuke install dotnet 3.0 Sdk
      inputs:
        version: '3.0.x'
        packageType: sdk

    - task: UseDotNet@2 # remove when 5.0 gets released
      displayName: Nuke install dotnet 5.0 Sdk
      inputs:
        version: '5.0.x'
        packageType: sdk
        includePreviewVersions: true

    - script: 'chmod +x ./build.sh'
      displayName: Nuke script permissions
      workingDirectory: $(System.DefaultWorkingDirectory)

    - script: './build.sh Push --nuget-api-key $(NuGetSourceServerApiKey)'
      displayName: Nuke compile/test/pack/push
      workingDirectory: $(System.DefaultWorkingDirectory)
    ### NUKE END #######################################

    - task: DockerCompose@0 # https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/build/docker-compose?view=azure-devops
      displayName: Docker build images
      condition: |
          and
          (
             succeeded(),
             eq(variables['dockerImagesPush'], 'true'),
             or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))
          )
      inputs:
        action: 'Build services'
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: $(azureSubscription)
        azureContainerRegistry: $(azureContainerRegistry)
        dockerComposeFile: '$(System.DefaultWorkingDirectory)/docker-compose.yml'
        additionalDockerComposeFiles: '$(System.DefaultWorkingDirectory)/docker-compose.override.yml'
        includeLatestTag: true
        additionalImageTags: $(GitVersion.NuGetVersionV2)

    - task: DockerCompose@0 # https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/build/docker-compose?view=azure-devops
      displayName: Docker push images
      condition: |
        and
        (
           succeeded(),
           eq(variables['dockerImagesPush'], 'true'),
           or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))
        )
      inputs:
        action: 'Push services'
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: $(azureSubscription)
        azureContainerRegistry: $(azureContainerRegistry)
        dockerComposeFile: '$(System.DefaultWorkingDirectory)/docker-compose.yml'
        additionalDockerComposeFiles: '$(System.DefaultWorkingDirectory)/docker-compose.override.yml'
        includeLatestTag: true
        additionalImageTags: $(GitVersion.NuGetVersionV2)