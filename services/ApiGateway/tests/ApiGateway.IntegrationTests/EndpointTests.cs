namespace Zeta.ApiGateway.IntegrationTests
{
    using System.Net.Http;
    using System.Threading.Tasks;
    using Newtonsoft.Json;
    using Xunit;
    using Xunit.Abstractions;
    using Zeta.ApiGateway.Presentation.Web;
    using Zeta.Foundation;

    public class EndpointTests
    {
        private readonly ITestOutputHelper testOutputHelper;
        private readonly HttpClient client;

        public EndpointTests(ITestOutputHelper testOutputHelper)
        {
            this.testOutputHelper = testOutputHelper;
#pragma warning disable CA2000 // Dispose objects before losing scope
            var factory = new CustomWebApplicationFactory<Startup>(testOutputHelper);
#pragma warning restore CA2000 // Dispose objects before losing scope
            this.client = factory.CreateClient();
        }

        //[Fact]
        //public async Task CreateSwaggerJsonTest()
        //{
        //    var response = await this.client.GetAsync("/swagger/v1/swagger.json").ConfigureAwait(false);

        //    response.EnsureSuccessStatusCode();
        //    var stringResponse = await response.Content.ReadAsStringAsync().ConfigureAwait(false);

        //    Assert.NotEmpty(stringResponse);

        //    using (var outputFile = new StreamWriter("../../../../../src/Orders.Presentation.Web/swagger.json"))
        //    {
        //        outputFile.WriteLine("//----------------------");
        //        outputFile.WriteLine("// <auto-generated>");
        //        outputFile.WriteLine($"//     Generated by {this.GetType().Namespace}.CreateSwaggerJsonTest");
        //        outputFile.WriteLine("// </auto-generated>");
        //        outputFile.WriteLine("//----------------------");
        //        outputFile.WriteLine(string.Empty);

        //        outputFile.WriteLine(stringResponse);
        //    }
        //}

        [Fact]
        public async Task EchoGetTest()
        {
            // arrange + act
            var response = await this.client.GetAsync("api/v1/_echo").ConfigureAwait(false);
            response.EnsureSuccessStatusCode();
            var stringResponse = await response.Content.ReadAsStringAsync().ConfigureAwait(false);
            var result = JsonConvert.DeserializeObject<object>(stringResponse);

            // assert
            Assert.NotNull(result);
        }

        //[Fact]
        //public async Task CustomersEchoGetTest()
        //{
        //    var response = await this.client.GetAsync("https://localhost/customers/api/echo").ConfigureAwait(false);

        //    response.EnsureSuccessStatusCode();
        //    var stringResponse = await response.Content.ReadAsStringAsync().ConfigureAwait(false);
        //    var result = JsonConvert.DeserializeObject<object>(stringResponse);

        //    Assert.NotNull(result);
        //}
    }
}
